/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './../routes/__root'
import { Route as PublicRouteImport } from './../routes/_public/route'
import { Route as PrivateRouteImport } from './../routes/_private/route'
import { Route as PrivateLayoutRouteImport } from './../routes/_private/_layout/route'
import { Route as PublicLoginIndexImport } from './../routes/_public/login/index'
import { Route as PrivateLayoutIndexImport } from './../routes/_private/_layout/index'
import { Route as PrivateLayoutStaffsImport } from './../routes/_private/_layout/staffs'
import { Route as PrivateLayoutOfficesImport } from './../routes/_private/_layout/offices'
import { Route as PrivateLayoutHotelsImport } from './../routes/_private/_layout/hotels'
import { Route as PrivateLayoutExcursionsImport } from './../routes/_private/_layout/excursions'
import { Route as PrivateLayoutHotelsNewImport } from './../routes/_private/_layout/hotels_.new'
import { Route as PrivateLayoutHotelsIdImport } from './../routes/_private/_layout/hotels_.$id'
import { Route as PrivateLayoutExcursionsNewImport } from './../routes/_private/_layout/excursions_.new'

// Create/Update Routes

const PublicRouteRoute = PublicRouteImport.update({
  id: '/_public',
  getParentRoute: () => rootRoute,
} as any)

const PrivateRouteRoute = PrivateRouteImport.update({
  id: '/_private',
  getParentRoute: () => rootRoute,
} as any)

const PrivateLayoutRouteRoute = PrivateLayoutRouteImport.update({
  id: '/_layout',
  getParentRoute: () => PrivateRouteRoute,
} as any)

const PublicLoginIndexRoute = PublicLoginIndexImport.update({
  id: '/login/',
  path: '/login/',
  getParentRoute: () => PublicRouteRoute,
} as any)

const PrivateLayoutIndexRoute = PrivateLayoutIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => PrivateLayoutRouteRoute,
} as any)

const PrivateLayoutStaffsRoute = PrivateLayoutStaffsImport.update({
  id: '/staffs',
  path: '/staffs',
  getParentRoute: () => PrivateLayoutRouteRoute,
} as any)

const PrivateLayoutOfficesRoute = PrivateLayoutOfficesImport.update({
  id: '/offices',
  path: '/offices',
  getParentRoute: () => PrivateLayoutRouteRoute,
} as any)

const PrivateLayoutHotelsRoute = PrivateLayoutHotelsImport.update({
  id: '/hotels',
  path: '/hotels',
  getParentRoute: () => PrivateLayoutRouteRoute,
} as any)

const PrivateLayoutExcursionsRoute = PrivateLayoutExcursionsImport.update({
  id: '/excursions',
  path: '/excursions',
  getParentRoute: () => PrivateLayoutRouteRoute,
} as any)

const PrivateLayoutHotelsNewRoute = PrivateLayoutHotelsNewImport.update({
  id: '/hotels_/new',
  path: '/hotels/new',
  getParentRoute: () => PrivateLayoutRouteRoute,
} as any)

const PrivateLayoutHotelsIdRoute = PrivateLayoutHotelsIdImport.update({
  id: '/hotels_/$id',
  path: '/hotels/$id',
  getParentRoute: () => PrivateLayoutRouteRoute,
} as any)

const PrivateLayoutExcursionsNewRoute = PrivateLayoutExcursionsNewImport.update(
  {
    id: '/excursions_/new',
    path: '/excursions/new',
    getParentRoute: () => PrivateLayoutRouteRoute,
  } as any,
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_private': {
      id: '/_private'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof PrivateRouteImport
      parentRoute: typeof rootRoute
    }
    '/_public': {
      id: '/_public'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof PublicRouteImport
      parentRoute: typeof rootRoute
    }
    '/_private/_layout': {
      id: '/_private/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof PrivateLayoutRouteImport
      parentRoute: typeof PrivateRouteImport
    }
    '/_private/_layout/excursions': {
      id: '/_private/_layout/excursions'
      path: '/excursions'
      fullPath: '/excursions'
      preLoaderRoute: typeof PrivateLayoutExcursionsImport
      parentRoute: typeof PrivateLayoutRouteImport
    }
    '/_private/_layout/hotels': {
      id: '/_private/_layout/hotels'
      path: '/hotels'
      fullPath: '/hotels'
      preLoaderRoute: typeof PrivateLayoutHotelsImport
      parentRoute: typeof PrivateLayoutRouteImport
    }
    '/_private/_layout/offices': {
      id: '/_private/_layout/offices'
      path: '/offices'
      fullPath: '/offices'
      preLoaderRoute: typeof PrivateLayoutOfficesImport
      parentRoute: typeof PrivateLayoutRouteImport
    }
    '/_private/_layout/staffs': {
      id: '/_private/_layout/staffs'
      path: '/staffs'
      fullPath: '/staffs'
      preLoaderRoute: typeof PrivateLayoutStaffsImport
      parentRoute: typeof PrivateLayoutRouteImport
    }
    '/_private/_layout/': {
      id: '/_private/_layout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof PrivateLayoutIndexImport
      parentRoute: typeof PrivateLayoutRouteImport
    }
    '/_public/login/': {
      id: '/_public/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof PublicLoginIndexImport
      parentRoute: typeof PublicRouteImport
    }
    '/_private/_layout/excursions_/new': {
      id: '/_private/_layout/excursions_/new'
      path: '/excursions/new'
      fullPath: '/excursions/new'
      preLoaderRoute: typeof PrivateLayoutExcursionsNewImport
      parentRoute: typeof PrivateLayoutRouteImport
    }
    '/_private/_layout/hotels_/$id': {
      id: '/_private/_layout/hotels_/$id'
      path: '/hotels/$id'
      fullPath: '/hotels/$id'
      preLoaderRoute: typeof PrivateLayoutHotelsIdImport
      parentRoute: typeof PrivateLayoutRouteImport
    }
    '/_private/_layout/hotels_/new': {
      id: '/_private/_layout/hotels_/new'
      path: '/hotels/new'
      fullPath: '/hotels/new'
      preLoaderRoute: typeof PrivateLayoutHotelsNewImport
      parentRoute: typeof PrivateLayoutRouteImport
    }
  }
}

// Create and export the route tree

interface PrivateLayoutRouteRouteChildren {
  PrivateLayoutExcursionsRoute: typeof PrivateLayoutExcursionsRoute
  PrivateLayoutHotelsRoute: typeof PrivateLayoutHotelsRoute
  PrivateLayoutOfficesRoute: typeof PrivateLayoutOfficesRoute
  PrivateLayoutStaffsRoute: typeof PrivateLayoutStaffsRoute
  PrivateLayoutIndexRoute: typeof PrivateLayoutIndexRoute
  PrivateLayoutExcursionsNewRoute: typeof PrivateLayoutExcursionsNewRoute
  PrivateLayoutHotelsIdRoute: typeof PrivateLayoutHotelsIdRoute
  PrivateLayoutHotelsNewRoute: typeof PrivateLayoutHotelsNewRoute
}

const PrivateLayoutRouteRouteChildren: PrivateLayoutRouteRouteChildren = {
  PrivateLayoutExcursionsRoute: PrivateLayoutExcursionsRoute,
  PrivateLayoutHotelsRoute: PrivateLayoutHotelsRoute,
  PrivateLayoutOfficesRoute: PrivateLayoutOfficesRoute,
  PrivateLayoutStaffsRoute: PrivateLayoutStaffsRoute,
  PrivateLayoutIndexRoute: PrivateLayoutIndexRoute,
  PrivateLayoutExcursionsNewRoute: PrivateLayoutExcursionsNewRoute,
  PrivateLayoutHotelsIdRoute: PrivateLayoutHotelsIdRoute,
  PrivateLayoutHotelsNewRoute: PrivateLayoutHotelsNewRoute,
}

const PrivateLayoutRouteRouteWithChildren =
  PrivateLayoutRouteRoute._addFileChildren(PrivateLayoutRouteRouteChildren)

interface PrivateRouteRouteChildren {
  PrivateLayoutRouteRoute: typeof PrivateLayoutRouteRouteWithChildren
}

const PrivateRouteRouteChildren: PrivateRouteRouteChildren = {
  PrivateLayoutRouteRoute: PrivateLayoutRouteRouteWithChildren,
}

const PrivateRouteRouteWithChildren = PrivateRouteRoute._addFileChildren(
  PrivateRouteRouteChildren,
)

interface PublicRouteRouteChildren {
  PublicLoginIndexRoute: typeof PublicLoginIndexRoute
}

const PublicRouteRouteChildren: PublicRouteRouteChildren = {
  PublicLoginIndexRoute: PublicLoginIndexRoute,
}

const PublicRouteRouteWithChildren = PublicRouteRoute._addFileChildren(
  PublicRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof PrivateLayoutRouteRouteWithChildren
  '/excursions': typeof PrivateLayoutExcursionsRoute
  '/hotels': typeof PrivateLayoutHotelsRoute
  '/offices': typeof PrivateLayoutOfficesRoute
  '/staffs': typeof PrivateLayoutStaffsRoute
  '/': typeof PrivateLayoutIndexRoute
  '/login': typeof PublicLoginIndexRoute
  '/excursions/new': typeof PrivateLayoutExcursionsNewRoute
  '/hotels/$id': typeof PrivateLayoutHotelsIdRoute
  '/hotels/new': typeof PrivateLayoutHotelsNewRoute
}

export interface FileRoutesByTo {
  '': typeof PublicRouteRouteWithChildren
  '/excursions': typeof PrivateLayoutExcursionsRoute
  '/hotels': typeof PrivateLayoutHotelsRoute
  '/offices': typeof PrivateLayoutOfficesRoute
  '/staffs': typeof PrivateLayoutStaffsRoute
  '/': typeof PrivateLayoutIndexRoute
  '/login': typeof PublicLoginIndexRoute
  '/excursions/new': typeof PrivateLayoutExcursionsNewRoute
  '/hotels/$id': typeof PrivateLayoutHotelsIdRoute
  '/hotels/new': typeof PrivateLayoutHotelsNewRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_private': typeof PrivateRouteRouteWithChildren
  '/_public': typeof PublicRouteRouteWithChildren
  '/_private/_layout': typeof PrivateLayoutRouteRouteWithChildren
  '/_private/_layout/excursions': typeof PrivateLayoutExcursionsRoute
  '/_private/_layout/hotels': typeof PrivateLayoutHotelsRoute
  '/_private/_layout/offices': typeof PrivateLayoutOfficesRoute
  '/_private/_layout/staffs': typeof PrivateLayoutStaffsRoute
  '/_private/_layout/': typeof PrivateLayoutIndexRoute
  '/_public/login/': typeof PublicLoginIndexRoute
  '/_private/_layout/excursions_/new': typeof PrivateLayoutExcursionsNewRoute
  '/_private/_layout/hotels_/$id': typeof PrivateLayoutHotelsIdRoute
  '/_private/_layout/hotels_/new': typeof PrivateLayoutHotelsNewRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/excursions'
    | '/hotels'
    | '/offices'
    | '/staffs'
    | '/'
    | '/login'
    | '/excursions/new'
    | '/hotels/$id'
    | '/hotels/new'
  fileRoutesByTo: FileRoutesByTo
  to:
    | ''
    | '/excursions'
    | '/hotels'
    | '/offices'
    | '/staffs'
    | '/'
    | '/login'
    | '/excursions/new'
    | '/hotels/$id'
    | '/hotels/new'
  id:
    | '__root__'
    | '/_private'
    | '/_public'
    | '/_private/_layout'
    | '/_private/_layout/excursions'
    | '/_private/_layout/hotels'
    | '/_private/_layout/offices'
    | '/_private/_layout/staffs'
    | '/_private/_layout/'
    | '/_public/login/'
    | '/_private/_layout/excursions_/new'
    | '/_private/_layout/hotels_/$id'
    | '/_private/_layout/hotels_/new'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  PrivateRouteRoute: typeof PrivateRouteRouteWithChildren
  PublicRouteRoute: typeof PublicRouteRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  PrivateRouteRoute: PrivateRouteRouteWithChildren,
  PublicRouteRoute: PublicRouteRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_private",
        "/_public"
      ]
    },
    "/_private": {
      "filePath": "_private/route.tsx",
      "children": [
        "/_private/_layout"
      ]
    },
    "/_public": {
      "filePath": "_public/route.tsx",
      "children": [
        "/_public/login/"
      ]
    },
    "/_private/_layout": {
      "filePath": "_private/_layout/route.tsx",
      "parent": "/_private",
      "children": [
        "/_private/_layout/excursions",
        "/_private/_layout/hotels",
        "/_private/_layout/offices",
        "/_private/_layout/staffs",
        "/_private/_layout/",
        "/_private/_layout/excursions_/new",
        "/_private/_layout/hotels_/$id",
        "/_private/_layout/hotels_/new"
      ]
    },
    "/_private/_layout/excursions": {
      "filePath": "_private/_layout/excursions.tsx",
      "parent": "/_private/_layout"
    },
    "/_private/_layout/hotels": {
      "filePath": "_private/_layout/hotels.tsx",
      "parent": "/_private/_layout"
    },
    "/_private/_layout/offices": {
      "filePath": "_private/_layout/offices.tsx",
      "parent": "/_private/_layout"
    },
    "/_private/_layout/staffs": {
      "filePath": "_private/_layout/staffs.tsx",
      "parent": "/_private/_layout"
    },
    "/_private/_layout/": {
      "filePath": "_private/_layout/index.tsx",
      "parent": "/_private/_layout"
    },
    "/_public/login/": {
      "filePath": "_public/login/index.tsx",
      "parent": "/_public"
    },
    "/_private/_layout/excursions_/new": {
      "filePath": "_private/_layout/excursions_.new.tsx",
      "parent": "/_private/_layout"
    },
    "/_private/_layout/hotels_/$id": {
      "filePath": "_private/_layout/hotels_.$id.tsx",
      "parent": "/_private/_layout"
    },
    "/_private/_layout/hotels_/new": {
      "filePath": "_private/_layout/hotels_.new.tsx",
      "parent": "/_private/_layout"
    }
  }
}
ROUTE_MANIFEST_END */
